/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2022-2024 The JReleaser authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.kordamp.gradle:java-project-gradle-plugin:$kordampPluginVersion"
        classpath "org.kordamp.gradle:checkstyle-gradle-plugin:$kordampPluginVersion"
        classpath "org.kordamp.gradle:kordamp-parentbuild:$kordampBuildVersion"
    }
}
apply plugin: 'org.kordamp.gradle.kordamp-parentbuild'

rootProject.name = 'jreleaser-opentelemetry-extension'

projects {
    plugins {
        all {
            id 'idea'
            id 'java-library'
            id 'org.kordamp.gradle.java-project'
            id 'org.kordamp.gradle.checkstyle'
        }
    }
}

enforce {
    mergeStrategy = 'append'

    rule(enforcer.rules.BanDuplicateClasses) { r ->
        r.ignoreWhenIdentical.set(true)
        r.dependency("com.google.guava:guava:$guavaVersion".toString()) { d->
            d.ignore('com.google.common.*')
        }
    }

    rule(enforcer.rules.ForceDependencies) { r ->
        r.dependencies.addAll "org.codehaus.plexus:plexus-utils:$plexusVersion",
            "com.google.errorprone:error_prone_annotations:$errorproneVersion",
            "com.google.guava:guava:$guavaVersion",
            "commons-codec:commons-codec:$commonsCodecVersion",
            "io.opentelemetry:opentelemetry-api:${opentelemetryVersion}",
            "org.apache.commons:commons-lang3:$commonsLang3Version",
            "org.apache.httpcomponents:httpcore:$httpcoreVersion",
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinVersion",
            "org.slf4j:slf4j-api:$slf4jVersion"
    }
}
